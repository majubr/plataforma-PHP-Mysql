install.packages("Rserve")
library(Rserve)
Rserve()
library(Vegan)
library(vegan)
library(Vegan)
install.packages("vegan")
library(Vegan)
library(vegan)
dev.off()
setwd("C:/xampp/htdocs/datatable6_v3/graficos")
dados <- dbGetQuery(conexao, "SELECT especie, numero_ind FROM herpetofauna")
install.packages("dbplyr")
library(dbplyr)
library(RMySQL)
library(vegan)
library(dbplyr)
# Estabelecer conexão com o banco de dados e selecionar a tabela "herpetofauna"
conexao <- dbConnect(MySQL(), user="root", password="", dbname="fauna", host="localhost")
dados <- dbGetQuery(conexao, "SELECT especie, numero_ind FROM herpetofauna")
plot(curva_coletor)
curva_coletor <- rarecurve(dados$numero_ind, step=10)
png("C:/xampp/htdocs/datatable6_v3/graficos/curva_coletor.png")
plot(curva_coletor)
library(RMySQL)
library(vegan)
library(dbplyr)
library(RMySQL)
library(vegan)
library(dbply)
install.packages("lifecycle")
install.packages("lifecycle")
install.packages("lifecycle")
install.packages("lifecycle")
install.packages("lifecycle")
library(RMySQL)
library(vegan)
library(dbplyr)
# Estabelecer conexão com o banco de dados e selecionar a tabela "herpetofauna"
conexao <- dbConnect(MySQL(), user="root", password="", dbname="fauna", host="localhost")
dados <- tbl(conexao, "herpetofauna") %>%
select(especie, numero_ind) %>%
collect()
library(RMySQL)
library(vegan)
# Estabelecer conexão com o banco de dados e selecionar a tabela "herpetofauna"
conexao <- dbConnect(MySQL(), user="root", password="", dbname="fauna", host="localhost")
dados <- dbGetQuery(conexao, "SELECT especie, numero_ind FROM herpetofauna")
# Criar a curva do coletor e salvar o gráfico como uma imagem
curva_coletor <- rarecurve(dados$numero_ind, step=10)
plot(curva_coletor)
library(RMySQL)
library(vegan)
# Estabelecer conexão com o banco de dados e selecionar a tabela "herpetofauna"
conexao <- dbConnect(MySQL(), user="root", password="", dbname="fauna", host="localhost")
dados <- dbGetQuery(conexao, "SELECT especie, numero_ind FROM herpetofauna")
# Criar a curva do coletor e salvar o gráfico como uma imagem
curva_coletor <- rarecurve(dados$numero_ind, step=10)
plot(curva_coletor$x, curva_coletor$y)
library(RMySQL)
library(vegan)
# Estabelecer conexão com o banco de dados e selecionar a tabela "herpetofauna"
conexao <- dbConnect(MySQL(), user="root", password="", dbname="fauna", host="localhost")
dados <- dbGetQuery(conexao, "SELECT especie, numero_ind FROM herpetofauna")
# Remover observações com valores ausentes (NA ou NULL)
dados <- na.omit(dados)
# Criar a curva do coletor e salvar o gráfico como uma imagem
curva_coletor <- rarecurve(dados$numero_ind, step=10)
plot(curva_coletor$x, curva_coletor$y)
plot(curva_coletor$x, curva_coletor$y)
png("C:/xampp/htdocs/datatable6_v3/graficos/curva_coletor.png")
View(dados)
View(dados)
library(RMySQL)
library(vegan)
library(reshape2)
# Estabelecer conexão com o banco de dados e selecionar a tabela "herpetofauna"
conexao <- dbConnect(MySQL(), user="root", password="", dbname="fauna", host="localhost")
dados <- dbGetQuery(conexao, "SELECT especie, numero_ind FROM herpetofauna")
# Estabelecer conexão com o banco de dados e selecionar a tabela "herpetofauna"
conexao <- dbConnect(MySQL(), user="root", password="", dbname="fauna", host="localhost")
dados <- dbGetQuery(conexao, "SELECT especie, numero_ind FROM herpetofauna")
# criar tabela com base nos dados presentes na variável "dados"
tabela_variavel <- dcast(dados, formula = especie ~ ., value.var = "numero_ind")
# remover observações com valores ausentes (NA ou NULL)
tabela_variavel <- na.omit(tabela_variavel)
View(tabela_variavel)
library(RMySQL)
library(vegan)
library(reshape2)
# Estabelecer conexão com o banco de dados e selecionar a tabela "herpetofauna"
conexao <- dbConnect(MySQL(), user="root", password="", dbname="fauna", host="localhost")
dados <- dbGetQuery(conexao, "SELECT especie, numero_ind FROM herpetofauna")
# Criar a tabela original com base na variável "dados"
tabela_original <- aggregate(dados$numero_ind, by = list(Entidade = dados$especie), sum)
tabela_original$Linha <- rep(1:(nrow(tabela_original)/4), each = 4)
library(RMySQL)
library(vegan)
library(reshape2)
# Estabelecer conexão com o banco de dados e selecionar a tabela "herpetofauna"
conexao <- dbConnect(MySQL(), user="root", password="", dbname="fauna", host="localhost")
dados <- dbGetQuery(conexao, "SELECT especie, numero_ind FROM herpetofauna")
# Criar a tabela original com base na variável "dados"
tabela_original <- aggregate(dados$numero_ind, by = list(Entidade = dados$especie), sum)
tabela_original$Linha <- rep(1:(nrow(tabela_original)/4), each = 4)
# Transformar a tabela em um formato de matriz com "Linha" como valor
# Transformar a tabela em um formato de matriz com "Linha" como valor
nova_tabela <- dcast(tabela_original, formula = Linha ~ Entidade, value.var = "x")
# Adicionar a coluna "Linha"
nova_tabela$Linha <- rep(1:(nrow(nova_tabela)/4), each = 4)
library(RMySQL)
library(vegan)
library(reshape2)
# Estabelecer conexão com o banco de dados e selecionar a tabela "herpetofauna"
conexao <- dbConnect(MySQL(), user = "root", password = "", dbname = "fauna", host = "localhost")
dados <- dbGetQuery(conexao, "SELECT especie, numero_ind FROM herpetofauna")
# Criar a tabela original com base na variável "dados"
tabela_original <- aggregate(numero_ind ~ especie, data = dados, sum)
tabela_original$Linha <- rep(1:(nrow(tabela_original) / 4), each = 4)
View(tabela_original)
library(RMySQL)
library(reshape2)
conexao <- dbConnect(MySQL(), user = "root", password = "", dbname = "fauna", host = "localhost")
dados <- dbGetQuery(conexao, "SELECT especie, numero_ind FROM herpetofauna")
nova_tabela <- dcast(dados, formula = especie ~ ., value.var = "numero_ind")
nova_tabela$especie <- NULL
View(nova_tabela)
View(dados)
library(RMySQL)
library(vegan)
# Estabelecer conexão com o banco de dados e selecionar a tabela "herpetofauna"
conexao <- dbConnect(MySQL(), user="root", password="", dbname="fauna", host="localhost")
dados <- dbGetQuery(conexao, "SELECT especie, numero_ind FROM herpetofauna")
View(dados)
View(dados)
library(RMySQL)
library(vegan)
# Estabelecer conexão com o banco de dados e selecionar a tabela "herpetofauna"
conexao <- dbConnect(MySQL(), user="root", password="", dbname="fauna", host="localhost")
dados <- dbGetQuery(conexao, "SELECT especie, numero_ind FROM herpetofauna")
View(dados)
dados <- na.omit(dados)
library(tidyr)
library(dplyr)
transform_table <- function(df) {
df %>%
group_by(especie, quantidade) %>%
summarise(count = n()) %>%
pivot_wider(names_from = especie, values_from = count, values_fill = 0)
}
transform_table(dados)
library(RMySQL)
library(vegan)
# Estabelecer conexão com o banco de dados e selecionar a tabela "herpetofauna"
conexao <- dbConnect(MySQL(), user="root", password="", dbname="fauna", host="localhost")
dados <- dbGetQuery(conexao, "SELECT especie, numero_ind FROM herpetofauna")
# Remover observações com valores ausentes (NA ou NULL)
dados <- na.omit(dados)
library(tidyr)
library(dplyr)
transform_table <- function(df) {
df %>%
group_by(especie, quantidade) %>%
summarise(count = n()) %>%
pivot_wider(names_from = especie, values_from = count, values_fill = 0)
}
transform_table(dados)
library(RMySQL)
library(vegan)
# Estabelecer conexão com o banco de dados e selecionar a tabela "herpetofauna"
conexao <- dbConnect(MySQL(), user="root", password="", dbname="fauna", host="localhost")
dados <- dbGetQuery(conexao, "SELECT especie, numero_ind FROM herpetofauna")
# Remover observações com valores ausentes (NA ou NULL)
dados <- na.omit(dados)
library(tidyr)
library(dplyr)
transform_table <- function(df, quantidade_col) {
df %>%
group_by(especie, !!sym(quantidade_col)) %>%
summarise(count = n()) %>%
pivot_wider(names_from = especie, values_from = count, values_fill = 0)
}
transform_table(dados, "numero_ind")
library(tidyr)
library(dplyr)
checkRVersion()
ver <- checkRVersion()
print(ver)
checkRVersion()
sessionInfo()
sessionInfo()
